<!DOCTYPE html>
<html lang="en">
<head>
	<title>Ovi Maps, which became Nokia Maps. Both available in this example</title>
	<script src="http://api.maps.ovi.com/jsl.js" type="text/javascript" charset="utf-8"></script>
	<script src="http://api.maps.nokia.com/2.1.1/jsl.js" type="text/javascript"></script>
</head>
<body>
	<div id="map" style="width:600px; height:400px;"></div>
	<script type="text/javascript">
		var lat = 60.16946603848575;
		var lng = 24.950122833251953;
		
		mapNokia();
		
		function mapNokia() {
			var center = [lat, lng];
		
			nokia.maps.util.ApplicationContext.set({
				appId: 'vCPgueIilGGcC1vRo_I4',
				authenticationToken: 'mvdHc17k0GEorCi72DBA'
			});
			
			var map = new nokia.maps.map.Display(document.getElementById("map"), {
				components: [ 
					// Behavior collection
					new nokia.maps.map.component.Behavior(),
					new nokia.maps.map.component.ZoomBar(),
					new nokia.maps.map.component.Overview(),
					new nokia.maps.map.component.TypeSelector(),
					new nokia.maps.map.component.ScaleBar(),
					// Needed for marker drag
					//new nokia.maps.map.component.objects.DragMarker()
				],
				zoomLevel: 10,
				center: center
			});
			
			// Remove zoom.MouseWheel behavior for better page scrolling experience
			//map.removeComponent(map.getComponentById("zoom.MouseWheel"));
				

			// Create a marker and add it to the map
			var sMarker = new nokia.maps.map.StandardMarker(center, {
				text: "Hoplaa!", // Small label
				shape: 'balloon',
				brush: {"color": "#43A51B"},
				draggable: true  // Make the marker draggable
			});
			map.objects.add(sMarker);
			
			var marker = new nokia.maps.map.Marker(
				new nokia.maps.geo.Coordinate(55.51, 12.4),{
				title: "marker",
				visibility: true,
				icon: "http://api.maps.nokia.com/2.1.1/devguide/images/pic_marker_house.png",
				// Offset the top left icon corner so that it's
				// Centered above the coordinate
				anchor: new nokia.maps.util.Point(32, 32) 
			});
			map.objects.add(marker);

		}



		function mapOvi() {
			var center = [lat, lng];
			
			ovi.mapsapi.util.ApplicationContext.set({
				appId: 'vCPgueIilGGcC1vRo_I4',
				authenticationToken: 'mvdHc17k0GEorCi72DBA'
			});
			
			// http://www.developer.nokia.com/Develop/Maps/Maps_API_for_JavaScript.xhtml
			var map = new ovi.mapsapi.map.Display(document.getElementById("map"), {
				components: [
					//behavior collection
					new ovi.mapsapi.map.component.Behavior(),
					new ovi.mapsapi.map.component.ZoomBar(),
					new ovi.mapsapi.map.component.Overview(),
					new ovi.mapsapi.map.component.TypeSelector(),
					new ovi.mapsapi.map.component.ScaleBar(),
					new ovi.mapsapi.map.component.zoom.DoubleClick(),
					//needed for marker drag
					new ovi.mapsapi.map.component.objects.DragMarker()
				],
				zoomLevel: 10,
				center: center
			});
		
			//remove zoom.MouseWheel behavior for better page scrolling experience
			map.removeComponent(map.getComponentById("zoom.MouseWheel"));

			//activate the satellite imagery on the display
			map.set("baseMapType", map.SATELLITE);

			//create a marker and add it to the map
			var sMarker = new ovi.mapsapi.map.StandardMarker(center, {
				text: "Hi!", //small label
				draggable: true  //the marker is marked to be draggable
			});
			map.objects.add(sMarker);
			
			var marker = new ovi.mapsapi.map.Marker(
				center, {
					title: "marker",
					visibility: true,
					icon: "images/pic_marker_house.png",
					//offset the top left icon corner so that it's
					//centered above the coordinate
					anchor: new ovi.mapsapi.util.Point(32, 32)
				}
			);
			map.objects.add(marker);
		}

		function mapOviSearch() {
		
			var manager = new ovi.mapsapi.search.Manager();
			manager.addObserver("state", function(observedManager, key, value) {
				if(value == "finished") {
					if (observedManager.locations.length > 0) {
						var rs = (new ovi.mapsapi.search.component.SearchResultSet(observedManager.locations)).container;
						//push marker(s) to map
						map.objects.add(rs);
						//zoom to result(s)
						map.zoomTo(rs.getBoundingBox());
						//zoom out if too close
						if (map.zoomLevel > 16) {
							map.set("zoomLevel", 16);
						}
					}
				} 
				else if (value == "failed") {
					alert("The automatically triggered search request in the Search example failed.");
				}
			});
			manager.search("pariser platz berlin", {
					//parameters that allow to set the proximity of the search
					//center: new ovi.mapsapi.geo.Coordinate(52.5, 13.3333),
					//radius: 1200000
			});
			manager.clear();
		}

	</script>
</body>
</html>
